(include! "syscalls.sasm")

start
    (jal x1 malloc-init)

    (lw x10 x2)
    (addi x11 x0 2)
    (bne x10 x11 error-argc)

    ;; Open input file
    ;; openat(AT_FDCWD, input-name, O_RDONLY, 0)
    (addi x10 x0 AT_FDCWD)
    ;; argv[1]
    (ld x11 (+ x2 16))
    (add x12 x0 x0)
    (add x13 x0 x0)
    (addi x17 x0 SYS_OPENAT)
    (ecall)
    (blt x10 x0 error-open)

    ;; Read input file to buffer
    ;; mmap(NULL, 64k, PROT_READ, MAP_PRIVATE, fd, 0)
    (add x14 x0 x10)
    (add x10 x0 x0)
    (addi x11 x0 1)
    (slli x11 x11 16)
    (addi x12 x0 1)
    (addi x13 x0 2)
    (add x15 x0 x0)
    (addi x17 x0 SYS_MMAP)
    (ecall)
    (blt x10 x0 error-read-input)
    (beq x10 x0 error-read-input)

    (add x31 x0 x10)

    ;; close(fd)
    (add x10 x0 x14)
    (addi x17 x0 SYS_CLOSE)
    (ecall)

    (add x10 x0 x31)
    ;; max
    (add x14 x0 x0)
    (add x15 x0 x0)
    (add x16 x0 x0)
    (addi x5 x0 10)

    ;; sum
    (add x7 x0 x0)
    loop
        (lb x28 x10)
        (beq x28 x0 newline)
        (subi x29 x28 #'\n')
        (beq x29 x0 newline)

        (add x31 x0 x0)
        read-num-loop
            (lb x28 x10)
            (beq x28 x0 eon)
            (addi x10 x10 1)
            (subi x29 x28 #'\n')
            (beq x29 x0 eon)
            (subi x29 x28 #'0')
            (mul x31 x31 x5)
            (add x31 x31 x29)
            (jal x0 read-num-loop)
        eon
            (add x7 x7 x31)
            (jal x0 loop)
        newline
            (addi x10 x10 1)
            (blt x7 x14 loop-reset)
            (blt x7 x15 newline-3)
            (add x14 x0 x15)
            (blt x7 x16 newline-2)
            (add x15 x0 x16)
            (add x16 x0 x7)
            (jal x0 loop-reset)
        newline-3
            (add x14 x0 x7)
            (jal x0 loop-reset)
        newline-2
            (add x15 x0 x7)
        loop-reset
            (add x7 x0 x0)
            (beq x28 x0 eof)
            (jal x0 loop)

    eof
        (subi x2 x2 32)
        (sd x2 x14)
        (sd (+ x2 8) x15)
        (sd (+ x2 16) x16)
        (add x22 x14 x15)
        (add x22 x22 x16)
        (sd (+ x2 24) x22)

        (addi x10 x0 32)
        (jal x1 malloc)
        (add x11 x0 x10)

        (addi x21 x0 4)

    eof-loop
        (beq x21 x0 exit)
        (subi x21 x21 1)

        (ld x6 x2)
        (addi x2 x2 8)

        (add x7 x0 x11)
        (add x12 x0 x0)
        (addi x5 x0 10)
        itoa
            (beq x6 x0 rev)
            (rem x28 x6 x5)
            (div x6 x6 x5)
            (addi x28 x28 #'0')
            (sb x7 x28)
            (addi x7 x7 1)
            (addi x12 x12 1)
            (jal x0 itoa)
        rev
            (add x28 x0 x11)
            (subi x29 x7 1)
            rev-loop
                (bge x28 x29 write)
                (lb x30 x28)
                (lb x31 x29)
                (sb x28 x31)
                (sb x29 x30)
                (addi x28 x28 1)
                (subi x29 x29 1)
                (jal x0 rev-loop)
        write
        (addi x5 x0 #'\n')
        (sb x7 x5)
        (addi x12 x12 1)
        ;; write(STDOUT, msg, len)
        (addi x10 x0 STDOUT)
        (addi x17 x0 SYS_WRITE)
        (ecall)
        (jal x0 eof-loop)

        exit
        ;; exit(0)
        (add x10 x0 x0)
        (addi x17 x0 SYS_EXIT)
        (ecall)

error-argc
    (addi x10 x0 -1)
    (addi x17 x0 SYS_EXIT)
    (ecall)
error-open
    (addi x10 x0 -2)
    (addi x17 x0 SYS_EXIT)
    (ecall)
error-read-input
    (addi x10 x0 -3)
    (addi x17 x0 SYS_EXIT)
    (ecall)

(include! "malloc.sasm")
