(include! "syscalls.sasm")

start
    (jal x1 malloc-init)

    (lw x10 x2)
    (addi x11 x0 2)
    (bne x10 x11 error-argc)

    ;; Open input file
    ;; openat(AT_FDCWD, input-name, O_RDONLY, 0)
    (addi x10 x0 AT_FDCWD)
    ;; argv[1]
    (ld x11 (+ x2 16))
    (add x12 x0 x0)
    (add x13 x0 x0)
    (addi x17 x0 SYS_OPENAT)
    (ecall)
    (blt x10 x0 error-open)

    ;; Read input file to buffer
    ;; mmap(NULL, 64k, PROT_READ, MAP_PRIVATE, fd, 0)
    (add x14 x0 x10)
    (add x10 x0 x0)
    (addi x11 x0 1)
    (slli x11 x11 25)
    (addi x12 x0 1)
    (addi x13 x0 2)
    (add x15 x0 x0)
    (addi x17 x0 SYS_MMAP)
    (ecall)
    (blt x10 x0 error-read-input)
    (beq x10 x0 error-read-input)

    (add x31 x0 x10)

    ;; close(fd)
    (add x10 x0 x14)
    (addi x17 x0 SYS_CLOSE)
    (ecall)

    (add x10 x0 x31)
    (subi x2 x2 8)
    (sd x2 x10)

    ;(jal x1 p1)

    (ld x10 x2)
    (addi x2 x2 8)

    (jal x1 p2)

    ;; exit(0)
    (add x10 x0 x0)
    (addi x17 x0 SYS_EXIT)
    (ecall)

    p2
        (subi x2 x2 16)
        (sd x2 x10)
        (sd (+ x2 8) x1)
        (addi x10 x0 1)
        (slli x10 x10 35)
        (jal x1 malloc)
        (add x20 x0 x10)
        (add x21 x0 x10)
        (addi x10 x0 1)
        (slli x10 x10 10)
        (jal x1 malloc)
        (add x22 x0 x10)
        (add x23 x0 x10)
        (ld x10 x2)

        (addi x10 x10 7)
        p2-read-seeds-loop
            (lb x5 x10)
            (subi x6 x5 #'\n')
            (beq x6 x0 p2-read-map-loop)
            (jal x1 atou)
            (addi x10 x10 1)
            (add x27 x0 x11)
            (jal x1 atou)
            (addi x10 x10 1)
            (subi x11 x11 1)
            p2-read-seeds-loop-add
                (beq x11 x0 p2-read-seeds-loop)
                (sd x20 x27)
                (addi x27 x27 1)
                (subi x11 x11 1)
                (addi x20 x20 8)
                (jal x0 p2-read-seeds-loop-add)

        p2-read-map-loop
            (add x22 x0 x23)
            (addi x10 x10 1)
            p2-read-map-loop-newline
                (lb x5 x10)
                (beq x5 x0 p2-min)
                (addi x10 x10 1)
                (subi x5 x5 #'\n')
                (beq x5 x0 p2-read-map-loop-start)
                (jal x0 p2-read-map-loop-newline)
            p2-read-map-loop-start
                (lb x5 x10)
                (beq x5 x0 p2-read-map-loop-end)
                (subi x5 x5 #'\n')
                (beq x5 x0 p2-read-map-loop-end)
                (jal x1 atou)
                (addi x10 x10 1)
                (sd x22 x11)
                (jal x1 atou)
                (addi x10 x10 1)
                (sd (+ x22 8) x11)
                (jal x1 atou)
                (addi x10 x10 1)
                (sd (+ x22 16) x11)
                (addi x22 x22 24)
                (jal x0 p2-read-map-loop-start)
            p2-read-map-loop-end
                (add x5 x0 x21)
                p2-do-map
                    (beq x5 x20 p2-read-map-loop)
                    (ld x6 x5)
                    (addi x5 x5 8)
                    (add x7 x0 x23)
                    p2-do-map-inner
                        (beq x7 x22 p2-do-map)
                        (ld x28 (+ x7 8))
                        (addi x7 x7 24)
                        (blt x6 x28 p2-do-map-inner)
                        (ld x29 (- x7 8))
                        (sub x28 x6 x28)
                        (blt x29 x28 p2-do-map-inner)
                        (ld x29 (- x7 24))
                        (add x28 x28 x29)
                        (sd (- x5 8) x28)
                        (jal x0 p2-do-map)

    p2-min
        (addi x10 x0 1)
        (slli x10 x10 50)
        (add x28 x0 x21)
    p2-min-loop
        (beq x28 x20 p2-done)
        (ld x6 x28)
        (addi x28 x28 8)
        (bge x6 x10 p2-min-loop)
        (add x10 x0 x6)
        (jal x0 p2-min-loop)
    p2-done
        (jal x1 write-int)
        (add x10 x0 x21)
        (jal x1 free)
        (add x10 x0 x23)
        (jal x1 free)
        (ld x1 (+ x2 8))
        (addi x2 x2 16)
        (jalr x0 x1)

    p1
        (subi x2 x2 16)
        (sd x2 x10)
        (sd (+ x2 8) x1)
        (addi x10 x0 1)
        (slli x10 x10 10)
        (jal x1 malloc)
        (add x20 x0 x10)
        (add x21 x0 x10)
        (addi x10 x0 1)
        (slli x10 x10 10)
        (jal x1 malloc)
        (add x22 x0 x10)
        (add x23 x0 x10)
        (ld x10 x2)

        (addi x10 x10 7)
        p1-read-seeds-loop
            (lb x5 x10)
            (subi x6 x5 #'\n')
            (beq x6 x0 p1-read-map-loop)
            (jal x1 atou)
            (addi x10 x10 1)
            (sd x20 x11)
            (addi x20 x20 8)
            (jal x0 p1-read-seeds-loop)

        p1-read-map-loop
            (add x22 x0 x23)
            (addi x10 x10 1)
            p1-read-map-loop-newline
                (lb x5 x10)
                (beq x5 x0 p1-min)
                (addi x10 x10 1)
                (subi x5 x5 #'\n')
                (beq x5 x0 p1-read-map-loop-start)
                (jal x0 p1-read-map-loop-newline)
            p1-read-map-loop-start
                (lb x5 x10)
                (beq x5 x0 p1-read-map-loop-end)
                (subi x5 x5 #'\n')
                (beq x5 x0 p1-read-map-loop-end)
                (jal x1 atou)
                (addi x10 x10 1)
                (sd x22 x11)
                (jal x1 atou)
                (addi x10 x10 1)
                (sd (+ x22 8) x11)
                (jal x1 atou)
                (addi x10 x10 1)
                (sd (+ x22 16) x11)
                (addi x22 x22 24)
                (jal x0 p1-read-map-loop-start)
            p1-read-map-loop-end
                (add x5 x0 x21)
                p1-do-map
                    (beq x5 x20 p1-read-map-loop)
                    (ld x6 x5)
                    (addi x5 x5 8)
                    (add x7 x0 x23)
                    p1-do-map-inner
                        (beq x7 x22 p1-do-map)
                        (ld x28 (+ x7 8))
                        (addi x7 x7 24)
                        (blt x6 x28 p1-do-map-inner)
                        (ld x29 (- x7 8))
                        (sub x28 x6 x28)
                        (blt x29 x28 p1-do-map-inner)
                        (ld x29 (- x7 24))
                        (add x28 x28 x29)
                        (sd (- x5 8) x28)
                        (jal x0 p1-do-map)

    p1-min
        (addi x10 x0 1)
        (slli x10 x10 50)
        (add x28 x0 x21)
    p1-min-loop
        (beq x28 x20 p1-done)
        (ld x6 x28)
        (addi x28 x28 8)
        (bge x6 x10 p1-min-loop)
        (add x10 x0 x6)
        (jal x0 p1-min-loop)
    p1-done
        (jal x1 write-int)
        (add x10 x0 x21)
        (jal x1 free)
        (add x10 x0 x23)
        (jal x1 free)
        (ld x1 (+ x2 8))
        (addi x2 x2 16)
        (jalr x0 x1)

error-argc
    (addi x10 x0 -1)
    (addi x17 x0 SYS_EXIT)
    (ecall)
error-open
    (addi x10 x0 -2)
    (addi x17 x0 SYS_EXIT)
    (ecall)
error-read-input
    (addi x10 x0 -3)
    (addi x17 x0 SYS_EXIT)
    (ecall)

(include! "util.sasm")
(include! "malloc.sasm")
