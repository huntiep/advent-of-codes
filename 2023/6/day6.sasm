(include! "syscalls.sasm")

start
    (jal x1 malloc-init)

    (lw x10 x2)
    (addi x11 x0 2)
    (bne x10 x11 error-argc)

    ;; Open input file
    ;; openat(AT_FDCWD, input-name, O_RDONLY, 0)
    (addi x10 x0 AT_FDCWD)
    ;; argv[1]
    (ld x11 (+ x2 16))
    (add x12 x0 x0)
    (add x13 x0 x0)
    (addi x17 x0 SYS_OPENAT)
    (ecall)
    (blt x10 x0 error-open)

    ;; Read input file to buffer
    ;; mmap(NULL, 64k, PROT_READ, MAP_PRIVATE, fd, 0)
    (add x14 x0 x10)
    (add x10 x0 x0)
    (addi x11 x0 1)
    (slli x11 x11 25)
    (addi x12 x0 1)
    (addi x13 x0 2)
    (add x15 x0 x0)
    (addi x17 x0 SYS_MMAP)
    (ecall)
    (blt x10 x0 error-read-input)
    (beq x10 x0 error-read-input)

    (add x31 x0 x10)

    ;; close(fd)
    (add x10 x0 x14)
    (addi x17 x0 SYS_CLOSE)
    (ecall)

    (add x10 x0 x31)
    (subi x2 x2 8)
    (sd x2 x10)

    (jal x1 p1)

    (ld x10 x2)
    (addi x2 x2 8)

    (jal x1 p2)

    ;; exit(0)
    (add x10 x0 x0)
    (addi x17 x0 SYS_EXIT)
    (ecall)

    p2
        (addi x10 x10 5)
        (add x20 x0 x0)
        (add x21 x0 x0)
        (addi x7 x0 10)
        p2-time-loop
            (lb x5 x10)
            (addi x10 x10 1)
            (subi x6 x5 #'\n')
            (beq x6 x0 p2-distance-loop)
            (subi x6 x5 #':')
            (bge x6 x0 p2-time-loop)
            (subi x6 x5 #'0')
            (blt x6 x0 p2-time-loop)
            (mul x20 x20 x7)
            (add x20 x20 x6)
            (jal x0 p2-time-loop)

        (addi x10 x10 9)
        p2-distance-loop
            (lb x5 x10)
            (beq x5 x0 p2-pre-loop)
            (addi x10 x10 1)
            (subi x6 x5 #'\n')
            (beq x6 x0 p2-pre-loop)
            (subi x6 x5 #':')
            (bge x6 x0 p2-distance-loop)
            (subi x6 x5 #'0')
            (blt x6 x0 p2-distance-loop)
            (mul x21 x21 x7)
            (add x21 x21 x6)
            (jal x0 p2-distance-loop)

        p2-pre-loop
        (add x10 x0 x0)
        (add x5 x0 x0)
        p2-loop
            (beq x20 x0 p2-done)
            (mul x7 x5 x20)
            (subi x20 x20 1)
            (addi x5 x5 1)
            (bge x21 x7 p2-loop)
            (addi x10 x10 1)
            (jal x0 p2-loop)

    p2-done
        (subi x2 x2 8)
        (sd x2 x1)
        (jal x1 write-int)
        (ld x1 x2)
        (addi x2 x2 8)
        (jalr x0 x1)

    p1
        (subi x2 x2 16)
        (sd x2 x10)
        (sd (+ x2 8) x1)

        (addi x10 x0 1)
        (slli x10 x10 16)
        (jal x1 malloc)
        (add x20 x0 x10)
        (add x21 x0 x10)

        (addi x10 x0 1)
        (slli x10 x10 16)
        (jal x1 malloc)
        (add x22 x0 x10)
        (add x23 x0 x10)

        (ld x10 x2)

        (addi x10 x10 5)
        p1-space-loop
            (lb x5 x10)
            (subi x5 x5 #' ')
            (bne x5 x0 p1-time-loop)
            (addi x10 x10 1)
            (jal x0 p1-space-loop)

        p1-time-loop
            (jal x1 atou)
            (sd x20 x11)
            (addi x20 x20 8)
            (lb x5 x10)
            (subi x5 x5 #'\n')
            (bne x5 x0 p1-space-loop)

        (addi x10 x10 10)
        p1-space-loop2
            (lb x5 x10)
            (beq x5 x0 p1-pre-loop)
            (subi x5 x5 #' ')
            (bne x5 x0 p1-distance-loop)
            (addi x10 x10 1)
            (jal x0 p1-space-loop2)
        p1-distance-loop
            (jal x1 atou)
            (sd x22 x11)
            (addi x22 x22 8)
            (lb x5 x10)
            (subi x5 x5 #'\n')
            (bne x5 x0 p1-space-loop2)

        p1-pre-loop
        (addi x10 x0 1)
        (add x26 x0 x21)
        (add x27 x0 x23)
        p1-loop
            (beq x26 x20 p1-done)
            (ld x28 x26)
            (addi x26 x26 8)
            (ld x29 x27)
            (addi x27 x27 8)

            (add x5 x0 x0)
            (add x6 x0 x0)
            p1-inner-loop
                (beq x28 x0 p1-loop-after)
                (mul x7 x6 x28)
                (subi x28 x28 1)
                (addi x6 x6 1)
                (bge x29 x7 p1-inner-loop)
                (addi x5 x5 1)
                (jal x0 p1-inner-loop)
            p1-loop-after
                (mul x10 x10 x5)
                (jal x0 p1-loop)

    p1-done
        (jal x1 write-int)
        (add x10 x0 x21)
        (jal x1 free)
        (add x10 x0 x23)
        (jal x1 free)
        (ld x1 (+ x2 8))
        (addi x2 x2 16)
        (jalr x0 x1)

error-argc
    (addi x10 x0 -1)
    (addi x17 x0 SYS_EXIT)
    (ecall)
error-open
    (addi x10 x0 -2)
    (addi x17 x0 SYS_EXIT)
    (ecall)
error-read-input
    (addi x10 x0 -3)
    (addi x17 x0 SYS_EXIT)
    (ecall)

(include! "util.sasm")
(include! "malloc.sasm")
