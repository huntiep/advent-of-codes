(include! "syscalls.sasm")

start
    (jal x1 malloc-init)

    (lw x10 x2)
    (addi x11 x0 2)
    (bne x10 x11 error-argc)

    ;; Open input file
    ;; openat(AT_FDCWD, input-name, O_RDONLY, 0)
    (addi x10 x0 AT_FDCWD)
    ;; argv[1]
    (ld x11 (+ x2 16))
    (add x12 x0 x0)
    (add x13 x0 x0)
    (addi x17 x0 SYS_OPENAT)
    (ecall)
    (blt x10 x0 error-open)

    ;; Read input file to buffer
    ;; mmap(NULL, 64k, PROT_READ, MAP_PRIVATE, fd, 0)
    (add x14 x0 x10)
    (add x10 x0 x0)
    (addi x11 x0 1)
    (slli x11 x11 25)
    (addi x12 x0 1)
    (addi x13 x0 2)
    (add x15 x0 x0)
    (addi x17 x0 SYS_MMAP)
    (ecall)
    (blt x10 x0 error-read-input)
    (beq x10 x0 error-read-input)

    (add x31 x0 x10)

    ;; close(fd)
    (add x10 x0 x14)
    (addi x17 x0 SYS_CLOSE)
    (ecall)

    (add x10 x0 x31)
    (subi x2 x2 8)
    (sd x2 x10)

    (jal x1 p1)

    (ld x10 x2)
    (addi x2 x2 8)

    (jal x1 p2)

    ;; exit(0)
    (add x10 x0 x0)
    (addi x17 x0 SYS_EXIT)
    (ecall)

    p2
        (subi x2 x2 16)
        (sd x2 x10)
        (sd (+ x2 8) x1)
        (addi x10 x0 1)
        (slli x10 x10 16)
        (jal x1 malloc)
        (add x22 x0 x10)
        (add x23 x0 x10)

        (addi x10 x0 1)
        (slli x10 x10 16)
        (jal x1 malloc)
        (add x24 x0 x10)
        (add x25 x0 x10)

        (ld x10 x2)

        (add x20 x0 x10)
        p2-read-path
            (lb x5 x10)
            (addi x10 x10 1)
            (subi x5 x5 #'\n')
            (bne x5 x0 p2-read-path)
        p2-read-nodes
            (subi x21 x10 1)
        p2-read-nodes-loop
            (lb x5 (+ x10 1))
            (beq x5 x0 p2-after-read)
            (lw x5 x10)
            (srai x5 x5 8)
            (sw x22 x5)
            (srai x6 x5 16)
            (subi x6 x6 #'A')
            (beq x6 x0 p2-read-nodes-loop-A)
        p2-read-nodes-loop-continue
            (addi x10 x10 7)
            (lw x5 x10)
            (srai x5 x5 8)
            (sw (+ x22 4) x5)
            (addi x10 x10 5)
            (lw x5 x10)
            (srai x5 x5 8)
            (sw (+ x22 8) x5)
            (addi x10 x10 5)
            (addi x22 x22 12)
            (jal x0 p2-read-nodes-loop)
        p2-read-nodes-loop-A
            (sw x24 x5)
            (addi x24 x24 8)
            (jal x0 p2-read-nodes-loop-continue)

        p2-after-read
            (add x12 x0 x25)
        p2-loop-starts
            (beq x12 x24 p2-lcm)
            (add x26 x0 x20)
            (add x27 x0 x0)
            (lw x5 x12)
            (addi x12 x12 8)
            p2-loop
                (add x10 x0 x23)
                p2-find-node
                    (lw x6 x10)
                    (beq x5 x6 p2-next-node)
                    (addi x10 x10 12)
                    (jal x0 p2-find-node)
                p2-next-node
                    (lb x31 x26)
                    (addi x26 x26 1)
                    (subi x31 x31 #'R')
                    (beq x31 x0 p2-next-node-R)
                    (lw x5 (+ x10 4))
                    p2-next-node-continue
                    (addi x27 x27 1)
                    (srai x30 x5 16)
                    (subi x30 x30 #'Z')
                    (beq x30 x0 p2-loop-after)
                    (bne x26 x21 p2-loop)
                    (add x26 x0 x20)
                    (jal x0 p2-loop)
                p2-next-node-R
                    (lw x5 (+ x10 8))
                    (jal x0 p2-next-node-continue)
            p2-loop-after
                (sd (- x12 8) x27)
                (jal x0 p2-loop-starts)

     p2-lcm
        (sub x5 x21 x20)
        (add x6 x0 x5)
        (add x7 x0 x25)
        p2-lcm-loop
            (ld x30 x7)
            (addi x7 x7 8)
            (div x30 x30 x6)
            (mul x5 x5 x30)
            (bne x7 x24 p2-lcm-loop)
;        (sub x10 x24 x25)
;        (jal x1 malloc)
;        (add x11 x0 x10)
;        (add x27 x0 x25)
;    p2-lcm-copy
;        (ld x5 x27)
;        (addi x27 x27 8)
;        (sd x11 x5)
;        (addi x11 x11 8)
;        (bne x27 x24 p2-lcm-copy)
;
;     p2-lcm-loop
;        (add x27 x0 x25)
;        (ld x5 x27)
;        (addi x27 x27 8)
;         p2-lcm-loop-eq
;            (beq x27 x24 p2-done)
;            (ld x6 x27)
;            (addi x27 x27 8)
;            (beq x5 x6 p2-lcm-loop-eq)
;        (add x7 x0 x25)
;        (addi x27 x25 8)
;        p2-min-loop
;            (beq x27 x24 p2-min-after)
;            (ld x6 x27)
;            (addi x27 x27 8)
;            (bge x6 x5 p2-min-loop)
;            (add x5 x0 x6)
;            (subi x7 x27 8)
;            (jal x0 p2-min-loop)
;        p2-min-after
;            (sub x30 x7 x25)
;            (add x30 x30 x10)
;            (ld x30 x30)
;            (ld x31 x7)
;            (add x31 x31 x30)
;            (sd x7 x31)
;            (jal x0 p2-lcm-loop)

     p2-done
        ;(add x20 x0 x10)
        (add x10 x0 x5)
        (jal x1 write-int)
        ;(add x10 x0 x20)
        ;(jal x1 free)
        (add x10 x0 x23)
        (jal x1 free)
        (add x10 x0 x25)
        (jal x1 free)
        (ld x1 (+ x2 8))
        (addi x2 x2 16)
        (jalr x0 x1)

    p1
        (subi x2 x2 16)
        (sd x2 x10)
        (sd (+ x2 8) x1)
        (addi x10 x0 1)
        (slli x10 x10 16)
        (jal x1 malloc)
        (add x22 x0 x10)
        (add x23 x0 x10)
        (ld x10 x2)

        (add x20 x0 x10)
        p1-read-path
            (lb x5 x10)
            (addi x10 x10 1)
            (subi x5 x5 #'\n')
            (bne x5 x0 p1-read-path)
        p1-read-nodes
            (subi x21 x10 1)
        p1-read-nodes-loop
            (lb x5 (+ x10 1))
            (beq x5 x0 p1-after-read)
            (lw x5 x10)
            (srai x5 x5 8)
            (sw x22 x5)
            (addi x10 x10 7)
            (lw x5 x10)
            (srai x5 x5 8)
            (sw (+ x22 4) x5)
            (addi x10 x10 5)
            (lw x5 x10)
            (srai x5 x5 8)
            (sw (+ x22 8) x5)
            (addi x10 x10 5)
            (addi x22 x22 12)
            (jal x0 p1-read-nodes-loop)
        p1-after-read
            (addi x5 x0 #'A')
            (slli x5 x5 8)
            (addi x5 x5 #'A')
            (slli x5 x5 8)
            (addi x5 x5 #'A')
            (addi x30 x0 #'Z')
            (slli x30 x30 8)
            (addi x30 x30 #'Z')
            (slli x30 x30 8)
            (addi x30 x30 #'Z')
            (add x26 x0 x20)
            (add x27 x0 x0)
        p1-loop
            (add x10 x0 x23)
            p1-find-node
                (lw x6 x10)
                (beq x5 x6 p1-next-node)
                (addi x10 x10 12)
                (jal x0 p1-find-node)
            p1-next-node
                (lb x31 x26)
                (addi x26 x26 1)
                (subi x31 x31 #'R')
                (beq x31 x0 p1-next-node-R)
                (lw x5 (+ x10 4))
                p1-next-node-continue
                (addi x27 x27 1)
                (beq x5 x30 p1-done)
                (bne x26 x21 p1-loop)
                (add x26 x0 x20)
                (jal x0 p1-loop)
            p1-next-node-R
                (lw x5 (+ x10 8))
                (jal x0 p1-next-node-continue)
    p1-done
        (add x10 x0 x27)
        (jal x1 write-int)
        (add x10 x0 x23)
        (jal x1 free)
        (ld x1 (+ x2 8))
        (addi x2 x2 16)
        (jalr x0 x1)

error-argc
    (addi x10 x0 -1)
    (addi x17 x0 SYS_EXIT)
    (ecall)
error-open
    (addi x10 x0 -2)
    (addi x17 x0 SYS_EXIT)
    (ecall)
error-read-input
    (addi x10 x0 -3)
    (addi x17 x0 SYS_EXIT)
    (ecall)

(include! "util.sasm")
(include! "malloc.sasm")
